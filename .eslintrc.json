{
  "root": true,
  "ignorePatterns": [
    "projects/**/*",
    "coverage/**/*"
  ],
  "overrides": [
    {
      "files": [
        "*.ts"
      ],
      "parserOptions": {
        "project": [
          "tsconfig.json"
        ],
        "createDefaultProgram": true
      },
      "plugins": [
        "eslint-plugin-import",
        "eslint-plugin-jsdoc",
        "@angular-eslint/eslint-plugin",
        "@angular-eslint/eslint-plugin-template",
        "@typescript-eslint"
      ],
      "extends": [
        "plugin:@angular-eslint/recommended",
        "plugin:@angular-eslint/template/process-inline-templates",
        "airbnb-typescript/base",
        "plugin:@typescript-eslint/recommended",
        "plugin:prettier/recommended"
      ],
      "rules": {
        "import/no-extraneous-dependencies": 0,
        "@typescript-eslint/naming-convention": [
          "error",
          {
            "selector": "default",
            "format": [
              "camelCase"
            ],
            "leadingUnderscore": "forbid",
            "trailingUnderscore": "forbid"
          },
          {
            "selector": "variable",
            "modifiers": [
              "const"
            ],
            "format": [
              "UPPER_CASE", "PascalCase", "camelCase"
            ]
          },
          {
            "selector": "parameter",
            "leadingUnderscore": "allow",
            "format": [
              "camelCase"
            ]
          },
          {
            "selector": "memberLike",
            "modifiers": [
              "private"
            ],
            "leadingUnderscore": "require",
            "format": [
              "camelCase"
            ]
          },
          {
            "selector": "objectLiteralProperty",
            "format": [
              "PascalCase", "camelCase"
            ]
          },
          {
            "selector": [
              "class", "enum", "enumMember", "interface", "typeAlias", "typeParameter"
            ],
            "format": [
              "PascalCase"
            ]
          }

        ],
        "comma-dangle": [
          "error", "never"
        ],
        "@typescript-eslint/no-explicit-any": [
          "error"
        ],
        "@typescript-eslint/no-unused-vars": [
          "error"
        ],
        "@typescript-eslint/no-parameter-properties": [
          "error", {
            "allows": [
              "private readonly", "public readonly"
            ]}],
        "no-else-return": [
          "error"
        ],
        "@angular-eslint/directive-selector": [
          "error",
          {
            "type": "attribute", "prefix": [
            "app", "aq"
          ], "style": "camelCase"
          }
        ],
        "@angular-eslint/component-selector": [
          "error",
          {
            "type": "element", "prefix": [
            "app", "aq"
          ], "style": "kebab-case"
          }
        ],
        "quotes": [
          "error", "single", {
            "allowTemplateLiterals": true, "avoidEscape": true}],
        "@angular-eslint/component-class-suffix": "error",
        "@angular-eslint/contextual-lifecycle": "error",
        "@angular-eslint/directive-class-suffix": "error",
        "@angular-eslint/no-conflicting-lifecycle": "error",
        "@angular-eslint/no-host-metadata-property": "error",
        "@angular-eslint/no-input-rename": "error",
        "@angular-eslint/no-inputs-metadata-property": "error",
        "@angular-eslint/no-output-native": "error",
        "@angular-eslint/no-output-on-prefix": "error",
        "@angular-eslint/no-output-rename": "error",
        "@angular-eslint/no-outputs-metadata-property": "error",
        "@angular-eslint/use-lifecycle-interface": "error",
        "@angular-eslint/use-pipe-transform-interface": "error",
        "@typescript-eslint/array-type": "off",
        "indent": "off",
        "operator-linebreak": [
          "error", "after", {
            "overrides": {
              "?": "before", ":": "before"
            }}],
        "@typescript-eslint/indent": [
          "error",
          4,
          {
            "SwitchCase": 1,
            "FunctionDeclaration": {
              "parameters": "first"
            },
            "FunctionExpression": {
              "parameters": "first"
            }
          }
        ],
        "@typescript-eslint/member-ordering": "error",
        "@typescript-eslint/no-empty-function": "off",
        "@typescript-eslint/no-inferrable-types": [
          "error",
          {
            "ignoreParameters": true
          }
        ],
        "@typescript-eslint/no-non-null-assertion": "error",
        "@typescript-eslint/no-var-requires": "off",
        "arrow-body-style": "error",
        "curly": "error",
        "eol-last": "error",
        "import/no-deprecated": "warn",
        "jsdoc/no-types": "error",
        "max-classes-per-file": "off",
        "max-len": [
          "error",
          {
            "code": 120,
            "ignorePattern": "^import\\s.+\\sfrom\\s.+;$",
            "ignoreUrls": true
          }
        ],
        "max-lines-per-function": [
          "error",
          {
            "max": 50,
            "skipComments": true,
            "skipBlankLines": false
          }
        ],
        "max-lines": [
          "error",
          {
            "max": 500,
            "skipComments": true,
            "skipBlankLines": true
          }
        ],
        "object-curly-newline": "off",
        "no-console": [
          "error"
        ],
        "no-empty": "off",
        "no-fallthrough": "error",
        "no-restricted-imports": [
          "error",
          "rxjs/Rx"
        ],
        "quote-props": [
          "error",
          "as-needed"
        ],
        "space-before-function-paren": [
          "error",
          {
            "anonymous": "never",
            "asyncArrow": "always",
            "named": "never"
          }
        ],
        "import/prefer-default-export": 0,
        "@typescript-eslint/no-redeclare": 0,
        "no-redeclare": "error",
        "@typescript-eslint/no-shadow": [
          "error"
        ],
        "no-shadow": "off",
        "import/order": [
          "error",
          {
            "pathGroups": [
              {
                "pattern": "^@angular|^rxjs|^@ngrx|^zone|^@storybook|^protractor|^ng-mocks",
                "group": "external",
                "position": "after"
              },
              {
                "pattern": "^@company",
                "group": "internal",
                "position": "after"
              }

            ],
            "alphabetize": {
              "order": "asc",
              "caseInsensitive": true
            },
            "newlines-between": "always"
          }
        ],
        "no-underscore-dangle": "off",
        "class-methods-use-this": "off",
        "arrow-parens": [2, "as-needed"],
        "implicit-arrow-linebreak": "off",
        "no-confusing-arrow": "off",
        "function-paren-newline": "off",
        "@typescript-eslint/lines-between-class-members": "off"
      }
    },
    {
      "files": [
        "*.html"
      ],
      "extends": [
        "plugin:@angular-eslint/template/recommended"
      ],
      "rules": {
        "max-len": [
          "error", {
            "code": 120}],
        "@angular-eslint/template/no-negated-async": "off"
      }
    },
    {
      "files": ["./**/root-store/**/*.ts"],
      "excludedFiles": "*.spec.ts",
      "rules": {
        "no-restricted-imports": [
          "error",
          {
            "paths": [
              {
                "name": "@app/store",
                "message": "Please use relative import to avoid cyclic dependency."
              }
            ]
          }
        ]
      }
    }
  ]
}
